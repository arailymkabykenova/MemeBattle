# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
.cursorrules
.env
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# FastAPI specific
.pytest_cache/
*.db

# Database
*.sqlite
*.sqlite3
*.db

# Logs
*.log
logs/

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# IDE
.vscode/
.idea/
*.swp
*.swo
*~

# Project specific
# Environment variables
.env
.env.local
.env.development
.env.test
.env.production
.env.*
!.env.example

# Temporary files
tmp/
temp/
*.tmp

# Azure specific
.azure/

# GameCenter specific
gamecenter-*.json
gamecenter_config.json

# Redis dump
dump.rdb

# PostgreSQL
*.sql

# Docker
.dockerignore

# Alembic
# Keep alembic.ini and versions/ but ignore any temporary files
alembic/__pycache__/

# Test files (keep test structure but ignore temporary test files)
test_*.py
debug_*.py
simple_*.py
*_test.py
give_cards_to_users.py

# Documentation files (temporary)
*.md
!README.md

# HTML test clients
websocket_test_client*.html
WEBSOCKET_TEST_INSTRUCTIONS.md
WEBSOCKET_TESTING_GUIDE.md
NEW_WEBSOCKET_ACTIONS_TEST.md
WEBSOCKET_AGE_GROUPS_ANALYSIS.md
AGE_GROUP_INTEGRATION_SUMMARY.md
AGE_RESTRICTION_CHANGES.md

# Backup files
*.bak
*.backup

# Node modules (if any frontend tools)
node_modules/

# Coverage reports
htmlcov/
.coverage

# pytest
.pytest_cache/

# Jupyter
.ipynb_checkpoints/

# Local configuration
local_config.py
config_local.py

# Security keys and certificates
*.pem
*.key
*.crt
*.p12

# Large files
*.zip
*.tar.gz
*.rar

# Temporary uploads
uploads/
temp_uploads/ 